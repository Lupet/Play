<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	                    http://www.springframework.org/schema/context
	                    http://www.springframework.org/schema/context/spring-context-3.2.xsd
						http://www.springframework.org/schema/security
						http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <security:global-method-security jsr250-annotations="disabled" secured-annotations="enabled"/>

    <!-- Wandelt Passwoerter in Hashwerte um (hier SHA) -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- Laedt Informationen wie Passwort und Rollen anhand des Benutzernamens -->
    <bean id="userDetailsService" class="services.SpringUserDetailsService"/>

    <!-- Authentifiziert einen Benutzer -->
    <bean id="daoAuthenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider"
          p:passwordEncoder-ref="passwordEncoder"
          p:userDetailsService-ref="userDetailsService"/>

    <!-- Manager, der die Zugriffsregeln aus dem security:http-Tag auswertet -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider ref="daoAuthenticationProvider"/>
    </security:authentication-manager>


</beans>
